// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Job {
    jobId     String     @id @default(uuid())
    jobTitle  String     @db.VarChar(100)
    minSalary Float?
    maxSalary Float?
    employees Employee[]
}

model Department {
    departmentId   String     @id @default(uuid())
    departmentName String     @db.VarChar(50)
    managerId      String
    manager        Employee   @relation("Employee", fields: [managerId], references: [employeeId])
    employees      Employee[] @relation("Department")
}

model Employee {
    employeeId   String     @id @default(uuid())
    firstName    String     @db.VarChar(50)
    lastName     String     @db.VarChar(50)
    email        String     @unique @db.VarChar(100)
    phoneNumber  String?    @db.VarChar(20)
    hireDate     DateTime
    salary       Float?
    managerId    String?
    manager      Employee?  @relation("EmployeeManager", fields: [managerId], references: [employeeId])
    subordinates Employee[] @relation("EmployeeManager")
    departmentId String
    department   Department @relation("Department", fields: [departmentId], references: [departmentId])
    jobId        String
    job          Job        @relation(fields: [jobId], references: [jobId])
    Department Department[] @relation("Employee")
}

model JobHistory {
    employeeId   String
    startDate    DateTime
    endDate      DateTime
    jobId        String
    departmentId String

    @@id([employeeId, startDate])
}
